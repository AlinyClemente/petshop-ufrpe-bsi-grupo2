package petshop.gui;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;
import petshop.classes.Animal;
import petshop.classes.BancoDeDados;
import petshop.classes.CPF;
import petshop.classes.Cliente;
import petshop.classes.Endereco;

/**
 *
 * @author arthur
 */
public class JanelaCliente extends javax.swing.JDialog {

    private Cliente cliente;
    private ArrayList<Animal> animais;
    private ArrayList<Integer> cadastrado;
    private ArrayList<Integer> alterado;
    private TipoJanela tipo;
    
    /** Creates new form JanelaCliente */
    public JanelaCliente(TipoJanela tipo) {
        this.tipo = tipo;
        initComponents();

        this.setLocationRelativeTo(this.getContentPane());

        KeyListener k = new KeyListener() {

            public void keyTyped(KeyEvent e) {
                if(!((e.getKeyChar() >= KeyEvent.VK_0
                        && e.getKeyChar() <= KeyEvent.VK_9)
                        || (e.getKeyChar() == KeyEvent.VK_BACK_SPACE))){
                    e.consume();
                }
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {
            }
        };

        campoTelefone.addKeyListener(k);
        campoCelular.addKeyListener(k);
        campoCEP.addKeyListener(k);
        campoCPF.addKeyListener(k);
        campoRG.addKeyListener(k);
        campoNumero.addKeyListener(k);

        animais = new ArrayList();
        cadastrado = new ArrayList();
        alterado = new ArrayList();

        reiniciar();

        if(this.tipo == TipoJanela.ALTERACAO){
            botaoCadastrar.setText("Alterar");
            botaoRemoverAnimal.setText("Alterar");
        } else if(this.tipo == TipoJanela.INFORMACAO){
            botaoCadastrar.setVisible(false);
            botaoCancelar.setVisible(false);
            botaoAdicionarAnimal.setText("Informação");
            botaoAdicionarAnimal.setVisible(false);
            desabilitarCampos();
        }
        
        campoNome.setDocument(new petshop.classes.LetraMaiuscula(80));
        campoRua.setDocument(new petshop.classes.LetraMaiuscula(70));
        campoNumero.setDocument(new petshop.classes.LetraMaiuscula(5));
        campoComplemento.setDocument(new petshop.classes.LetraMaiuscula(30));
        campoBairro.setDocument(new petshop.classes.LetraMaiuscula(30));
        campoCidade.setDocument(new petshop.classes.LetraMaiuscula(30));
        campoRG.setDocument(new petshop.classes.LetraMaiuscula(15));
        campoEmail.setDocument(new petshop.classes.LetraMaiuscula(70));
        areaInformacoes.setDocument(new petshop.classes.LetraMaiuscula(400));

        reiniciar();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        campoNome = new javax.swing.JTextField();
        comboSexo = new javax.swing.JComboBox();
        campoTelefone = new javax.swing.JTextField();
        campoCelular = new javax.swing.JTextField();
        campoRua = new javax.swing.JTextField();
        campoComplemento = new javax.swing.JTextField();
        campoBairro = new javax.swing.JTextField();
        campoCidade = new javax.swing.JTextField();
        comboUF = new javax.swing.JComboBox();
        campoCEP = new javax.swing.JTextField();
        campoRG = new javax.swing.JTextField();
        campoCPF = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        scrollInformacoes = new javax.swing.JScrollPane();
        areaInformacoes = new javax.swing.JTextArea();
        botaoCancelar = new javax.swing.JButton();
        botaoCadastrar = new javax.swing.JButton();
        comboAnimais = new javax.swing.JComboBox();
        botaoAdicionarAnimal = new javax.swing.JButton();
        botaoRemoverAnimal = new javax.swing.JButton();
        campoNumero = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(390, 365));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        campoNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoNome, gridBagConstraints);

        comboSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SEXO", "MASCULINO", "FEMININO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(comboSexo, gridBagConstraints);

        campoTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarFone(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoTelefone, gridBagConstraints);

        campoCelular.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarFone(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoCelular, gridBagConstraints);

        campoRua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoRua, gridBagConstraints);

        campoComplemento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoComplemento, gridBagConstraints);

        campoBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoBairro, gridBagConstraints);

        campoCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoCidade, gridBagConstraints);

        comboUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UF", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "GO", "ES", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SP", "SC", "SE", "TO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(comboUF, gridBagConstraints);

        campoCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarCEP(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoCEP, gridBagConstraints);

        campoRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoRG, gridBagConstraints);

        campoCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarCPF(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoCPF, gridBagConstraints);

        campoEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoEmail, gridBagConstraints);

        areaInformacoes.setColumns(20);
        areaInformacoes.setLineWrap(true);
        areaInformacoes.setRows(5);
        areaInformacoes.setText("Informações Adicionais");
        areaInformacoes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        scrollInformacoes.setViewportView(areaInformacoes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(scrollInformacoes, gridBagConstraints);

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelar(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(botaoCancelar, gridBagConstraints);

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrar(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(botaoCadastrar, gridBagConstraints);

        comboAnimais.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ANIMAIS" }));
        comboAnimais.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mudarComboAnimais(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(comboAnimais, gridBagConstraints);

        botaoAdicionarAnimal.setText("Adicionar");
        botaoAdicionarAnimal.setMinimumSize(null);
        botaoAdicionarAnimal.setPreferredSize(null);
        botaoAdicionarAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adicionarAnimal(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        jPanel1.add(botaoAdicionarAnimal, gridBagConstraints);

        botaoRemoverAnimal.setText("Remover");
        botaoRemoverAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removerAnimal(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 5, 5);
        jPanel1.add(botaoRemoverAnimal, gridBagConstraints);

        campoNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoNumero, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tirarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tirarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals(getEtiqueta(campo))){
            if(tipo != TipoJanela.INFORMACAO){                
                campo.setText("");
            }
        }
}//GEN-LAST:event_tirarEtiqueta

    private void colocarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colocarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals("")){
            campo.setText(getEtiqueta(campo));
        }
}//GEN-LAST:event_colocarEtiqueta

    private void cancelar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelar
        int resp = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cancelar?", "Sair", JOptionPane.YES_NO_OPTION);

        if(resp == JOptionPane.YES_OPTION){
            this.dispose();
            reiniciar();
        }
}//GEN-LAST:event_cancelar

    private void adicionarAnimal(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adicionarAnimal
        JanelaAnimal animal = new JanelaAnimal(this, TipoJanela.CADASTRO);

        if(tipo == TipoJanela.INFORMACAO){
            animal = new JanelaAnimal(this, TipoJanela.INFORMACAO);
            preencher(animal);
        }

        animal.setModalityType(java.awt.Dialog.DEFAULT_MODALITY_TYPE);
        animal.setVisible(true);
}//GEN-LAST:event_adicionarAnimal

    private void cadastrar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrar
        if(!existemDependencias()){
            cliente = gerarCliente();
            if(!cliente.getCpf().isValido()){
                JOptionPane.showMessageDialog(this.getContentPane(), "CPF Inválido!");
                return;
            }
            if(BancoDeDados.existeCPF(cliente.getCpf()) && tipo != TipoJanela.ALTERACAO){
                JOptionPane.showMessageDialog(this.getContentPane(), "Este CPF já está cadastrado no banco de dados!");
                return;
            }

            if(tipo == TipoJanela.CADASTRO){
                if(BancoDeDados.cadastrar(cliente)){
                    if(cadastrarAnimais()){
                        JOptionPane.showMessageDialog(this.getContentPane(), "Cliente cadastrado com sucesso!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao cadastrar cliente!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao cadastrar cliente!");
                }
            } else {
                if(BancoDeDados.alterar(cliente)){
                    if(alterarAnimais() && cadastrarAnimais()){
                        JOptionPane.showMessageDialog(this.getContentPane(), "Cliente alterado com sucesso!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao alterar cliente!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao alterar cliente!");
                }
            }

        }
    }//GEN-LAST:event_cadastrar

    private void eventoDigitarFone(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventoDigitarFone
        JTextField campo = (JTextField) evt.getComponent();

        if(campo.getText().length() == 13){
            evt.consume();
        }

        if(evt.getKeyChar() != KeyEvent.VK_BACK_SPACE){
            if(campo.getText().length() == 0){
                campo.setText("(");
            } else if(campo.getText().length() == 3){
                campo.setText(campo.getText() + ")");
            } else if(campo.getText().length() == 8){
                campo.setText(campo.getText() + "-");
            }
        }
    }//GEN-LAST:event_eventoDigitarFone

    private void eventoDigitarCPF(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventoDigitarCPF
        JTextField campo = (JTextField) evt.getComponent();

        if(campo.getText().length() == 14){
            evt.consume();
        }

        if(evt.getKeyChar() != KeyEvent.VK_BACK_SPACE){
            if(campo.getText().length() == 3){
                campo.setText(campo.getText() + ".");
            } else if(campo.getText().length() == 7){
                campo.setText(campo.getText() + ".");
            } else if(campo.getText().length() == 11){
                campo.setText(campo.getText() + "-");
            }
        }
    }//GEN-LAST:event_eventoDigitarCPF

    private void eventoDigitarCEP(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventoDigitarCEP
        JTextField campo = (JTextField) evt.getComponent();

        if(campo.getText().length() == 9){
            evt.consume();
        }

        if(evt.getKeyChar() != KeyEvent.VK_BACK_SPACE){
            if(campo.getText().length() == 5){
                campo.setText(campo.getText() + "-");
            }
        }
    }//GEN-LAST:event_eventoDigitarCEP

    private void mudarComboAnimais(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mudarComboAnimais
        if(comboAnimais.getSelectedIndex() > 0){
            if(this.tipo != TipoJanela.INFORMACAO){
                botaoRemoverAnimal.setVisible(true);
            } else {
                botaoAdicionarAnimal.setVisible(true);
            }
        } else {
            botaoRemoverAnimal.setVisible(false);
            if(this.tipo == TipoJanela.INFORMACAO){
                botaoAdicionarAnimal.setVisible(false);
            }
        }
    }//GEN-LAST:event_mudarComboAnimais

    private void removerAnimal(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerAnimal
        if(tipo == TipoJanela.ALTERACAO){
            JanelaAnimal janela = new JanelaAnimal(this, TipoJanela.ALTERACAO);

            preencher(janela);

            janela.setModalityType(java.awt.Dialog.DEFAULT_MODALITY_TYPE);
            janela.setVisible(true);
        } else {
            animais.remove(comboAnimais.getSelectedIndex() - 1);
            comboAnimais.removeItemAt(comboAnimais.getSelectedIndex());
        }
    }//GEN-LAST:event_removerAnimal

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JanelaCliente(TipoJanela.CADASTRO).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaInformacoes;
    private javax.swing.JButton botaoAdicionarAnimal;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoRemoverAnimal;
    private javax.swing.JTextField campoBairro;
    private javax.swing.JTextField campoCEP;
    private javax.swing.JTextField campoCPF;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoCidade;
    private javax.swing.JTextField campoComplemento;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoNumero;
    private javax.swing.JTextField campoRG;
    private javax.swing.JTextField campoRua;
    private javax.swing.JTextField campoTelefone;
    private javax.swing.JComboBox comboAnimais;
    private javax.swing.JComboBox comboSexo;
    private javax.swing.JComboBox comboUF;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollInformacoes;
    // End of variables declaration//GEN-END:variables

    private String getEtiqueta(JTextComponent campo) {

        if(campo.equals(campoNome)){
            return "NOME";
        } else if(campo.equals(campoRua)){
            return "RUA";
        } else if(campo.equals(campoNumero)){
            return "Nº";
        } else if(campo.equals(campoComplemento)){
            return "COMPLEMENTO";
        } else if(campo.equals(campoBairro)){
            return "BAIRRO";
        } else if(campo.equals(campoCidade)){
            return "CIDADE";
        } else if(campo.equals(campoCEP)){
            return "CEP";
        } else if(campo.equals(campoRG)){
            return "RG";
        } else if(campo.equals(campoCPF)){
            return "CPF";
        } else if(campo.equals(campoEmail)){
            return "E-MAIL";
        } else if(campo.equals(campoTelefone)){
            return "TELEFONE";
        } else if(campo.equals(campoCelular)){
            return "CELULAR";
        } else if(campo.equals(areaInformacoes)){
            return "INFORMAÇÕES ADICIONAIS";
        }

        return "NÚMERO";
    }

    private void reiniciar() {

        campoNome.setText(getEtiqueta(campoNome));
        campoRua.setText(getEtiqueta(campoRua));
        campoNumero.setText(getEtiqueta(campoNumero));
        campoComplemento.setText(getEtiqueta(campoComplemento));
        campoBairro.setText(getEtiqueta(campoBairro));
        campoCidade.setText(getEtiqueta(campoCidade));
        campoCEP.setText(getEtiqueta(campoCEP));
        campoCPF.setText(getEtiqueta(campoCPF));
        campoRG.setText(getEtiqueta(campoRG));
        campoTelefone.setText(getEtiqueta(campoTelefone));
        campoCelular.setText(getEtiqueta(campoCelular));
        campoEmail.setText(getEtiqueta(campoEmail));
        areaInformacoes.setText(getEtiqueta(areaInformacoes));

        comboSexo.setSelectedIndex(0);
        comboUF.setSelectedIndex(0);
        comboAnimais.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"ANIMAIS"}));

        botaoRemoverAnimal.setVisible(false);
    }

    void adicionarAnimal(Animal a) {
        animais.add(a);
        cadastrado.add(1);
        alterado.add(0);

        comboAnimais.addItem(a.getNome());
    }

    void alterarAnimal(int index, Animal a) {
        animais.remove(index);
        animais.add(a);
        alterado.remove(index);
        alterado.add(1);
        cadastrado.remove(index);
        cadastrado.add(0);

        comboAnimais.removeItemAt(index + 1);
        comboAnimais.addItem(a.getNome());
        comboAnimais.updateUI();
    }

    private boolean existemDependencias() {
        String msg = "Você esqueceu de preencher os \nseguintes campos obrigatórios:\n\n";

        boolean existeDependencias = false;

        if(campoNome.getText().equals("Nome")){
            msg += "- NOME\n";
            existeDependencias = true;
        }
        if(comboSexo.getSelectedIndex() == 0){
            msg += "- SEXO\n";
            existeDependencias = true;
        }
        if(campoRua.getText().equals("Rua")){
            msg += "- RUA\n";
            existeDependencias = true;
        }
        if(campoNumero.getText().equals("Número")){
            msg += "- NÚMERO\n";
            existeDependencias = true;
        }
        if(campoBairro.getText().equals("Bairro")){
            msg += "- BAIRRO\n";
            existeDependencias = true;
        }
        if(campoCidade.getText().equals("Cidade")){
            msg += "- CIDADE\n";
            existeDependencias = true;
        }
        if(comboUF.getSelectedIndex() == 0){
            msg += "- UF\n";
            existeDependencias = true;
        }
        if(campoRG.getText().equals("RG")){
            msg += "- RG\n";
            existeDependencias = true;
        }
        if(campoCPF.getText().equals("CPF")){
            msg += "- CPF\n";
            existeDependencias = true;
        }
        if(campoTelefone.getText().equals("Telefone") && campoCelular.getText().equals("Celular")){
            msg += "- TELEFONE OU CELULAR";
            existeDependencias = true;
        }

        if(existeDependencias){
            JOptionPane.showMessageDialog(this.getContentPane(), msg);
            return true;
        }

        boolean celularValido = campoCelular.getText().substring(0,1).equals("(") &&
                campoCelular.getText().substring(3,4).equals(")") &&
                campoCelular.getText().substring(8,9).equals("-");
        boolean telefoneValido = campoTelefone.getText().substring(0,1).equals("(") &&
                campoTelefone.getText().substring(3,4).equals(")") &&
                campoTelefone.getText().substring(8,9).equals("-");

        if(campoCelular.getText().length() < 13 || !celularValido){
            if(!campoCelular.getText().equals(getEtiqueta(campoCelular))){
                JOptionPane.showMessageDialog(this.getContentPane(), "Celular Inválido!");
                return true;
            }
        } else if(campoTelefone.getText().length() < 13 || !telefoneValido){
            if(!campoTelefone.getText().equals(getEtiqueta(campoTelefone))){
                JOptionPane.showMessageDialog(this.getContentPane(), "Telefone Inválido!");
                return true;
            }
        } else if((campoCEP.getText().length() < 9 && !campoCEP.getText().equals(getEtiqueta(campoCEP))) ||
                !campoCEP.getText().substring(5, 6).equals("-")){
            JOptionPane.showMessageDialog(this.getContentPane(), "CEP Inválido!");
            return true;

        }

        return existeDependencias;
    }

    public Cliente gerarCliente() {
        
        String complemento = "";
        String cep = "";
        String email = "";
        String telefone = "";
        String celular = "";
        String informacoes = "";

        if(!campoComplemento.getText().equals(getEtiqueta(campoComplemento))){
            complemento = campoComplemento.getText();
        }
        if(!campoCEP.getText().equals(getEtiqueta(campoCEP))){
            cep = campoCEP.getText();
        }
        if(!campoEmail.getText().equals(getEtiqueta(campoEmail))){
            email = campoEmail.getText();
        }
        if(!campoTelefone.getText().equals(getEtiqueta(campoTelefone))){
            telefone = campoTelefone.getText();
        }
        if(!campoCelular.getText().equals(getEtiqueta(campoCelular))){
            celular = campoCelular.getText();
        }
        if(!areaInformacoes.getText().equals(getEtiqueta(areaInformacoes))){
            informacoes = areaInformacoes.getText();
        }

        //ENDEREÇO
        String rua = campoRua.getText();
        int numero = Integer.valueOf(campoNumero.getText());
        String bairro = campoBairro.getText();
        String cidade = campoCidade.getText();
        String uf = (String) comboUF.getSelectedItem();

        //CLIENTE
        String nome = campoNome.getText();
        String sexo;
        if(comboSexo.getSelectedIndex() == 1){
            sexo = "M";
        } else {
            sexo = "F";
        }
        Endereco endereco = new Endereco(rua, numero, complemento, bairro, cidade, uf, cep);
        String CPF = campoCPF.getText().substring(0, 3) + campoCPF.getText().substring(4, 7) +
                campoCPF.getText().substring(8, 11) + campoCPF.getText().substring(12, 14);
        CPF cpf = new CPF(CPF);
        long rg = Long.valueOf(campoRG.getText());
        Animal[] listaAnimais;
        try {
            listaAnimais = (Animal[]) animais.toArray();
        } catch(ClassCastException e){
            listaAnimais = new Animal[0];
        }
        
        Cliente c = new Cliente(nome, sexo, endereco, rg, cpf, email,
                telefone, celular, listaAnimais, informacoes);
        if(tipo == TipoJanela.ALTERACAO){
            c.setCodigo(cliente.getCodigo());
        }
        
        return c;
    }

    private void desabilitarCampos(){
        campoNome.setEditable(false);
        comboSexo.setEnabled(false);
        campoRua.setEditable(false);
        campoNumero.setEditable(false);
        campoComplemento.setEditable(false);
        campoBairro.setEditable(false);
        campoCidade.setEditable(false);
        comboUF.setEnabled(false);
        campoCEP.setEditable(false);
        campoRG.setEditable(false);
        campoCPF.setEditable(false);
        campoEmail.setEditable(false);
        campoTelefone.setEditable(false);
        campoCelular.setEditable(false);
        areaInformacoes.setEditable(false);
    }

    public JTextArea getAreaInformacoes() {
        return areaInformacoes;
    }

    public JButton getBotaoAdicionarAnimal() {
        return botaoAdicionarAnimal;
    }

    public JButton getBotaoCadastrar() {
        return botaoCadastrar;
    }

    public JButton getBotaoCancelar() {
        return botaoCancelar;
    }

    public JButton getBotaoRemoverAnimal() {
        return botaoRemoverAnimal;
    }

    public JTextField getCampoBairro() {
        return campoBairro;
    }

    public JTextField getCampoCEP() {
        return campoCEP;
    }

    public JTextField getCampoCPF() {
        return campoCPF;
    }

    public JTextField getCampoCelular() {
        return campoCelular;
    }

    public JTextField getCampoCidade() {
        return campoCidade;
    }

    public JTextField getCampoComplemento() {
        return campoComplemento;
    }

    public JTextField getCampoEMail() {
        return campoEmail;
    }

    public JTextField getCampoNome() {
        return campoNome;
    }

    public JTextField getCampoNumero() {
        return campoNumero;
    }

    public JTextField getCampoRG() {
        return campoRG;
    }

    public JTextField getCampoRua() {
        return campoRua;
    }

    public JTextField getCampoTelefone() {
        return campoTelefone;
    }

    public JComboBox getComboAnimais() {
        return comboAnimais;
    }

    public JComboBox getComboSexo() {
        return comboSexo;
    }

    public JComboBox getComboUF() {
        return comboUF;
    }

    public JScrollPane getScrollInformacoes() {
        return scrollInformacoes;
    }

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public ArrayList<Animal> getAnimais() {
        return animais;
    }

    public void setAnimais(ArrayList<Animal> animais) {
        this.animais = animais;
    }

    public ArrayList<Integer> getAlterado() {
        return alterado;
    }

    public void setAlterado(ArrayList<Integer> alterado) {
        this.alterado = alterado;
    }

    public ArrayList<Integer> getCadastrado() {
        return cadastrado;
    }

    public void setCadastrado(ArrayList<Integer> cadastrado) {
        this.cadastrado = cadastrado;
    }


    
    private boolean cadastrarAnimais(){
        boolean cadastrouAnimais = true;

        for(int i = 0; i < animais.size(); i++){
            animais.get(i).setCodigoDono(BancoDeDados.getClienteCod(cliente));
            if(cadastrado.get(i) == 1)
                cadastrouAnimais = cadastrouAnimais && BancoDeDados.cadastrar(animais.get(i));
        }

        return cadastrouAnimais;
    }

    private boolean alterarAnimais(){
        boolean alterouAnimais = true;

        for(int i = 0; i < animais.size(); i++){
            animais.get(i).setCodigoDono(BancoDeDados.getClienteCod(cliente));
            if(alterado.get(i) == 1)
                alterouAnimais = alterouAnimais && BancoDeDados.alterar(animais.get(i));
        }

        return alterouAnimais;
    }

    private void preencher(JanelaAnimal janelaAnimal){
        Animal a = animais.get(comboAnimais.getSelectedIndex() - 1);
        SimpleDateFormat data = new SimpleDateFormat("dd/MM/yyyy");
        
        janelaAnimal.getCampoNome().setText(a.getNome());
        if(a.getSexo() == 'M') janelaAnimal.getComboSexo().setSelectedIndex(1);
        else janelaAnimal.getComboSexo().setSelectedIndex(2);
        janelaAnimal.getCampoDataNasc().setText(data.format(a.getDataNasc().getTime()));
        janelaAnimal.getComboEspecie().setSelectedItem(a.getEspecie());
        janelaAnimal.getCampoRaca().setText(a.getRaca());
        if(!a.getInfo().equals("")) {
            janelaAnimal.getAreaInformacoes().setText(a.getInfo());
        }
    }
}
