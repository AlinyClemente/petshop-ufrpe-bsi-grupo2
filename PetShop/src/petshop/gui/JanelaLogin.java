package petshop.gui;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import petshop.classes.BancoDeDados;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;
/**
 *
 * @author arthur
 */
public class JanelaLogin extends javax.swing.JFrame {

    String usuario;
    String senha;

    /** Creates new form JanelaLogin */
    public JanelaLogin() {
        initComponents();

        usuario = "";
        senha = "";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        campoUsuario = new javax.swing.JTextField();
        campoSenha = new javax.swing.JTextField();
        botaoEntrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(270, 380));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        campoUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoUsuario.setText("Usu치rio");
        campoUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(campoUsuario, gridBagConstraints);

        campoSenha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoSenha.setText("Senha");
        campoSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                transformaSenha(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(campoSenha, gridBagConstraints);

        botaoEntrar.setText("Entrar");
        botaoEntrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logar(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(botaoEntrar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tirarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tirarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals(getEtiqueta(campo))){
            campo.setText("");
        }
    }//GEN-LAST:event_tirarEtiqueta

    private void colocarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colocarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals("")){
            campo.setText(getEtiqueta(campo));
        }
    }//GEN-LAST:event_colocarEtiqueta

    private void logar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logar
        // TODO add your handling code here:
        if(!existemPendencias()){
            usuario = this.campoUsuario.getText();
            if(login(usuario, senha)) {
                this.setVisible(false);
                JanelaPrincipal janela = new JanelaPrincipal();

                // Get the size of the screen
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

                // Determine the new location of the window
                int w = janela.getSize().width;
                int h = janela.getSize().height;
                int x = (dim.width-w)/2;
                int y = (dim.height-h)/2;

                // Move the window
                janela.setLocation(x, y);
                janela.setVisible(true);
            }
        }
    }//GEN-LAST:event_logar

    private void transformaSenha(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_transformaSenha
        JTextField campo = (JTextField) evt.getComponent();

        if(campo.getText().length() == 30) evt.consume();

        if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE){
            if(senha.length() > 0){
                String ast = campoSenha.getText();
                senha = senha.substring(0, senha.length()-1);
            }
        } else {
            senha = senha + Character.toString(evt.getKeyChar());
            evt.setKeyChar('*');
        }

        System.out.print(senha+"\n");
    }//GEN-LAST:event_transformaSenha

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEntrar;
    private javax.swing.JTextField campoSenha;
    private javax.swing.JTextField campoUsuario;
    // End of variables declaration//GEN-END:variables

    //Retorna a etiqueta certa pra cada campo
    private String getEtiqueta(JTextComponent campo){

        if(campo.equals(campoUsuario)) return "Usu치rio";
        else if(campo.equals(campoSenha)) return "Senha";

        return "";
    }


    private boolean login(String user, String senha) {
        try {
            String cmd = "SELECT user,senha FROM usuarios WHERE user='" + user + "'";
            System.out.println(cmd);
            ResultSet dados = BancoDeDados.statement.executeQuery(cmd);

            dados.next();
            String u = (String) dados.getObject(1);
            String s = (String) dados.getObject(2);
            if (user.equals(u)) {
                if (senha.equals(s)) {
                    System.out.println("Usuario conectado com exito.");
                    return true;
                } else {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Senha Invalida");
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(this.getContentPane(), "Usuario invalido");
                return false;

            }

        } catch (SQLException e) {
            System.out.print(e);
            System.out.println("Erro do Sistema");
            return false;
        }
    }

    public boolean existemPendencias(){
        boolean pendencia = false;

        if(campoUsuario.getText().equals("Usu치rio")){
            JOptionPane.showMessageDialog(this.getContentPane(), "Preencha o campo de usu치rio");
            pendencia = true;
        } else if(campoSenha.getText().equals("Senha")){
            JOptionPane.showMessageDialog(this.getContentPane(), "Preencha o campo de senha");
            pendencia = true;
        }

        return pendencia;
    }
}
