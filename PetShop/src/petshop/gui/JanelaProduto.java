package petshop.gui;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;
import petshop.classes.BancoDeDados;
import petshop.classes.LetraMaiuscula;
import petshop.classes.Produto;

/**
 *
 * @author arthur
 */
public class JanelaProduto extends javax.swing.JDialog {
    
    Produto produto;
    private TipoJanela tipo;

    /** Creates new form JanelaProduto */
    public JanelaProduto(TipoJanela tipo) {
        this.tipo = tipo;
        initComponents();

        this.setLocationRelativeTo(this.getContentPane());

        KeyListener k1 = new KeyListener() {
                    public void keyTyped(KeyEvent e) {
                        if (!((e.getKeyChar() >= KeyEvent.VK_0 &&
                               e.getKeyChar() <= KeyEvent.VK_9) ||
                              (e.getKeyChar() == KeyEvent.VK_BACK_SPACE))) {
                            e.consume(); } }
                    public void keyPressed(KeyEvent e) { }
                    public void keyReleased(KeyEvent e) { } };

        KeyListener k2 = new KeyListener() {
                    public void keyTyped(KeyEvent e) {
                        if (!((e.getKeyChar() >= KeyEvent.VK_0 &&
                               e.getKeyChar() <= KeyEvent.VK_9) ||
                               (e.getKeyChar() <= KeyEvent.VK_PERIOD) ||
                              (e.getKeyChar() == KeyEvent.VK_BACK_SPACE))) {
                            e.consume(); } }
                    public void keyPressed(KeyEvent e) { }
                    public void keyReleased(KeyEvent e) { } };

        campoEstoque.addKeyListener(k1);
        campoCodigo.addKeyListener(k1);
        campoPrecoCusto.addKeyListener(k2);
        campoPrecoVenda.addKeyListener(k2);

        if(this.tipo == TipoJanela.ALTERACAO){
            botaoCadastrar.setText("Alterar");
        } else if(this.tipo == TipoJanela.INFORMACAO){
            botaoCadastrar.setVisible(false);
            botaoCancelar.setVisible(false);
            desabilitarCampos();
        }

        campoCodigo.setDocument(new LetraMaiuscula(9));
        campoNome.setDocument(new LetraMaiuscula(80));
        campoEstoque.setDocument(new LetraMaiuscula(7));
        areaInformacoes.setDocument(new LetraMaiuscula(400));

        reiniciar();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        campoNome = new javax.swing.JTextField();
        campoEstoque = new javax.swing.JTextField();
        campoPrecoCusto = new javax.swing.JTextField();
        scrollInformacoes = new javax.swing.JScrollPane();
        areaInformacoes = new javax.swing.JTextArea();
        botaoCadastrar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        campoPrecoVenda = new javax.swing.JTextField();
        campoCodigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Produto");
        setMinimumSize(new java.awt.Dimension(380, 270));
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        campoNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoNome, gridBagConstraints);

        campoEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoEstoque, gridBagConstraints);

        campoPrecoCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoPrecoCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarPreco(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoPrecoCusto, gridBagConstraints);

        areaInformacoes.setColumns(20);
        areaInformacoes.setLineWrap(true);
        areaInformacoes.setRows(5);
        areaInformacoes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        scrollInformacoes.setViewportView(areaInformacoes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(scrollInformacoes, gridBagConstraints);

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrar(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(botaoCadastrar, gridBagConstraints);

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelar(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(botaoCancelar, gridBagConstraints);

        campoPrecoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        campoPrecoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eventoDigitarPreco(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoPrecoVenda, gridBagConstraints);

        campoCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tirarEtiqueta(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                colocarEtiqueta(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(campoCodigo, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tirarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tirarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals(getEtiqueta(campo))){
            if(tipo != TipoJanela.INFORMACAO){
                if(campo.equals(campoEstoque))
                    campoEstoque.setDocument(new LetraMaiuscula(4));
                campo.setText("");
            }
        }
}//GEN-LAST:event_tirarEtiqueta

    private void colocarEtiqueta(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colocarEtiqueta
        JTextComponent campo = (JTextComponent) evt.getComponent();

        if(campo.getText().equals("")){
            if(campo.equals(campoEstoque))
                    campoEstoque.setDocument(new LetraMaiuscula(7));
            campo.setText(getEtiqueta(campo));
        }
}//GEN-LAST:event_colocarEtiqueta

    private void cancelar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelar
        int resp = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cancelar?", "Sair", JOptionPane.YES_NO_OPTION);

        if(resp == JOptionPane.YES_OPTION)
            this.dispose();
            reiniciar();
}//GEN-LAST:event_cancelar

    private void cadastrar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrar
        if(!existemDependencias()){
            produto = gerarProduto();

            if(tipo == TipoJanela.CADASTRO){
                if(BancoDeDados.cadastrar(produto)){
                    JOptionPane.showMessageDialog(this.getContentPane(), "Produto cadastrado com sucesso!");
                    reiniciar();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao cadastrar produto!");
                }
            } else {
                if(BancoDeDados.alterar(produto)){
                    JOptionPane.showMessageDialog(this.getContentPane(), "Produto alterado com sucesso!");
                    reiniciar();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this.getContentPane(), "Falha ao alterar produto!");
                }
            }
        }
    }//GEN-LAST:event_cadastrar

    private void eventoDigitarPreco(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventoDigitarPreco
        JTextField campo = (JTextField) evt.getComponent();
        String t = campo.getText();

        if(t.length() == 8) evt.consume();

        //nao deixa ter mais de 1 virgula e coloca 0 automaticamente caso campo
        //seja vazio
        if(evt.getKeyChar() == KeyEvent.VK_PERIOD){
            if(t.contains("."))
                evt.consume();
            if(t.equals(""))
                campo.setText("0");
        }
        //Nao deixa decimal ser maior que 2
        if(t.length() > 3)
            if(t.substring(t.length()-3, t.length()-2).equals("."))
                evt.consume();
        //se tamanho do preco == 5 e nao for backspace e nao tiver outra virgula
        //coloca virgula automaticamente
        if(t.length() == 5 && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE && !t.contains("."))
            campo.setText(t + ".");
    }//GEN-LAST:event_eventoDigitarPreco

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaProduto(TipoJanela.CADASTRO).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaInformacoes;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JTextField campoCodigo;
    private javax.swing.JTextField campoEstoque;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPrecoCusto;
    private javax.swing.JTextField campoPrecoVenda;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollInformacoes;
    // End of variables declaration//GEN-END:variables

    //Retorna a etiqueta certa pra cada campo
    private String getEtiqueta(JTextComponent campo){

        if(campo.equals(campoNome)) return "NOME";
        else if(campo.equals(campoPrecoCusto)) return "PREÇO DE CUSTO";
        else if(campo.equals(campoCodigo)) return "CÓDIGO";
        else if(campo.equals(campoPrecoVenda)) return "PREÇO DE VENDA";
        else if(campo.equals(campoEstoque)) return "ESTOQUE";
        else if(campo.equals(areaInformacoes)) return "INFORMAÇÕES ADICIONAIS";

        return "";
    }

    //Volta todos os campos pras etiquetas padrões.
    private void reiniciar(){

        campoCodigo.setText(getEtiqueta(campoCodigo));
        campoNome.setText(getEtiqueta(campoNome));
        campoPrecoCusto.setText(getEtiqueta(campoPrecoCusto));
        campoPrecoVenda.setText(getEtiqueta(campoPrecoVenda));
        campoEstoque.setText(getEtiqueta(campoEstoque));
        campoEstoque.setDocument(new LetraMaiuscula(7));
        areaInformacoes.setText(getEtiqueta(areaInformacoes));
    }

    private boolean existemDependencias(){
        String msg = "Você esqueceu de preencher os \nseguintes campos obrigatórios:\n\n";

        boolean existeDependencias = false;

        if(campoNome.getText().equals("Nome")){ msg += "- NOME\n"; existeDependencias = true;}
        if(campoPrecoCusto.getText().equals("Preço Custo")){ msg += "- PREÇO DE CUSTO\n"; existeDependencias = true;}
        if(campoPrecoVenda.getText().equals("Preço Venda")){ msg += "- PREÇO DE VENDA\n"; existeDependencias = true;}
        if(campoEstoque.getText().equals("Qtde Estoque")){ msg += "- QTDE EM ESTOQUE\n"; existeDependencias = true;}

        if(existeDependencias){
            JOptionPane.showMessageDialog(this.getContentPane(), msg);
        }

        return existeDependencias;
    }

    private Produto gerarProduto(){
        String informacoes = "";
        int codigo = 0;

        if(!campoCodigo.getText().equals(getEtiqueta(campoCodigo)))
                codigo = Integer.valueOf(campoCodigo.getText());
        if(!areaInformacoes.getText().equals(getEtiqueta(areaInformacoes)))
                informacoes = areaInformacoes.getText();

        String nome = campoNome.getText();
        int qtdeEstoque = Integer.valueOf(campoEstoque.getText());
        double precoCusto = Double.valueOf(campoPrecoCusto.getText());
        double precoVenda = Double.valueOf(campoPrecoVenda.getText());

        return new Produto(codigo, nome, precoCusto, precoVenda, qtdeEstoque, informacoes);
    }

    public JTextArea getAreaInformacoes() {
        return areaInformacoes;
    }

    public JTextField getCampoCodigo() {
        return campoCodigo;
    }

    public JTextField getCampoNome() {
        return campoNome;
    }

    public JTextField getCampoPrecoCusto() {
        return campoPrecoCusto;
    }

    public JTextField getCampoPrecoVenda() {
        return campoPrecoVenda;
    }

    public JTextField getCampoQtde() {
        return campoEstoque;
    }

    private void desabilitarCampos() {
        campoCodigo.setEditable(false);
        campoNome.setEditable(false);
        campoEstoque.setEditable(false);
        campoPrecoCusto.setEditable(false);
        campoPrecoVenda.setEditable(false);
        areaInformacoes.setEditable(false);
    }


}
